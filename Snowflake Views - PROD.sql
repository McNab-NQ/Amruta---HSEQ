USE ROLE SYSADMIN;
USE WAREHOUSE PROD_WH_SNOWFLAKE;
--------------------------------------------------------------

create or replace view PROD_DATAWAREHOUSE_DB.KEYPAY.VW_HSEQ_EMP_ZERO_RATIO(
	START_DATE,
	ZERO_COUNT,
	TOTAL_COUNT,
	RATIO,
	REGION
) as(
WITH E AS
(
SELECT 
EMPLOYEE_ID AS ID,
TO_DATE(START_DATE) AS START_DATE,
COUNT(*) OVER ( ORDER BY TO_DATE(START_DATE) RANGE BETWEEN INTERVAL '2 YEAR' PRECEDING AND CURRENT ROW) AS ZERO_COUNT,
COUNT(*) OVER ( ORDER BY TO_DATE(START_DATE) ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS TOTAL_COUNT
FROM PROD_DATAWAREHOUSE_DB.KEYPAY.EMPLOYEES
)
SELECT E.START_DATE, E.ZERO_COUNT, E.TOTAL_COUNT,DIV0(E.ZERO_COUNT,E.TOTAL_COUNT) AS RATIO, LTRIM(RTRIM(SPLIT_PART(EM.PRIMARY_LOCATION, '-',-1))) AS REGION FROM E
JOIN PROD_DATAWAREHOUSE_DB.KEYPAY.EMPLOYEES EM
ON E.ID = EM.EMPLOYEE_ID
);

create or replace view PROD_DATAWAREHOUSE_DB.KEYPAY.VW_HSEQ_MCNAB_HRS(
	MCNAB_HRS,
	PROJECTNUM,
	START_DATE
) as
(
SELECT SUM(MCNAB_HRS) AS MCNAB_HRS,PROJECTNUM,START_DATE FROM
(
SELECT T.EMPLOYEE_ID,TO_DATE(T.START_TIME) AS START_DATE, T.END_TIME, DATEDIFF(HOUR, T.START_TIME::TIMESTAMP,T.END_TIME::TIMESTAMP) AS MCNAB_HRS,
T.LOAD_TIMESTAMP, T.LOCATION_ID,B.EXTERNAL_ID , LTRIM(RTRIM(SPLIT_PART(B.EXTERNAL_ID, '-',-2))) AS PROJECTNUM
FROM PROD_DATAWAREHOUSE_DB.KEYPAY.TIMESHEETS T
JOIN PROD_DATAWAREHOUSE_DB.KEYPAY.BUSINESS_LOCATIONS B
ON T.LOCATION_ID = B.LOCATION_ID
)
GROUP BY PROJECTNUM,START_DATE
);

create or replace view PROD_DATAWAREHOUSE_DB.PROCORE.VW_HSEQ_INCIDENTS_BY_CATEGORY(
	PROJECTID,
	DATE,
	HAZARD_NAME,
	INCIDENTS
) as
(
SELECT  PROJECTID, TO_DATE(EVENT_DATE) AS DATE,HAZARD_NAME,
COUNT(*) OVER (PARTITION BY HAZARD_NAME ORDER BY LAST_DAY(TO_DATE(EVENT_DATE)) RANGE BETWEEN INTERVAL '2 MONTH' PRECEDING AND CURRENT ROW) AS INCIDENTS
FROM PROD_DATAWAREHOUSE_DB.PROCORE.INCIDENT
GROUP BY PROJECTID, DATE, HAZARD_NAME
ORDER BY TO_DATE(EVENT_DATE)
);

create or replace view PROD_DATAWAREHOUSE_DB.PROCORE.VW_HSEQ_OBSERVATIONS_TIME_TO_CLOSE(
	DAYS_TO_CLOSE,
	PROJECTID,
	CREATED_AT,
	CLOSED_AT
) as
(
SELECT AVG(DAYS) AS DAYS_TO_CLOSE,PROJECTID, CREATED_AT, CLOSED_AT FROM
(
SELECT ID,PROJECTID, CREATED_AT, CLOSED_AT, DATEDIFF(DAY, CREATED_AT, CLOSED_AT) AS DAYS,
TO_CHAR(TO_DATE(CLOSED_AT),'YYYYMM') AS YEARMONTH,
FROM PROD_DATAWAREHOUSE_DB.PROCORE.OBSERVATION
)
GROUP BY PROJECTID, CREATED_AT, CLOSED_AT
);

create or replace view PROD_DATAWAREHOUSE_DB.REPORTING.VW_HSEQ_FILTERS(
	PROJECTID,
	REGION,
	CONTACT_ID,
	ROLE_NAME,
	ROLE
) as(
SELECT DISTINCT P.ID AS PROJECTID,P.PROJECT_REGION AS REGION, R.CONTACT_ID, R.NAME AS ROLE_NAME, R.ROLE FROM PROD_DATAWAREHOUSE_DB.PROCORE.PROJECT P
LEFT JOIN PROD_DATAWAREHOUSE_DB.PROCORE.PROJECT_ROLE R
ON P.ID = R.PROJECTID
WHERE ROLE = 'Construction Manager'
OR ROLE IS NULL
);

create or replace view PROD_DATAWAREHOUSE_DB.REPORTING.VW_HSEQ_JOB_DETAILS(
	JOB_ID,
	JOB_NAME,
	DATE,
	REGION,
	MCNAB_HRS,
	SUBBIES_HRS,
	OBSERVATIONS,
	INCIDENTS,
	TRIFR,
	WALKABOUTS,
	ITPS,
	RISK_REGISTER,
	TASK_OBSERVATIONS,
	HIGH_RISK_AUDITS
) as
(
WITH P AS
(
SELECT PROJECT_ID_PROCORE AS JOB_ID, PROJECT_NAME AS JOB_NAME, JOB_NUMBER AS PROJECT_NUMBER,ACTUAL_START_DATE_PROCORE AS DATE, REGION
FROM PROD_DATAWAREHOUSE_DB.REPORTING.VW_GOLD_PROJECTS_ALL
),
O AS
(
SELECT PROJECTID, COUNT(ID) AS OBSERVATIONS 
FROM PROD_DATAWAREHOUSE_DB.PROCORE.OBSERVATION
GROUP BY PROJECTID
),
I AS
(
SELECT PROJECTID, COUNT(ID) AS INCIDENTS 
FROM PROD_DATAWAREHOUSE_DB.PROCORE.INCIDENT
GROUP BY PROJECTID
),
J AS 
(SELECT PROJECTID,COUNT(DISTINCT INCIDENT_ID) AS TRIFR
FROM PROD_DATAWAREHOUSE_DB.PROCORE.INCIDENT_INJURY
WHERE FILING_TYPE IN ('lost_time', 'medically_treated','first_aid')
AND (INCIDENT_TITLE NOT LIKE '%Test%' OR INCIDENT_TITLE NOT LIKE '%Training%')
GROUP BY PROJECTID
),
M AS (
SELECT SUM(MCNAB_HRS) AS MCNAB_HRS,PROJECTNUM FROM
(
SELECT T.EMPLOYEE_ID,T.START_TIME, T.END_TIME, DATEDIFF(HOUR, T.START_TIME::TIMESTAMP,T.END_TIME::TIMESTAMP) AS MCNAB_HRS,
T.LOAD_TIMESTAMP, T.LOCATION_ID,B.EXTERNAL_ID , LTRIM(RTRIM(SPLIT_PART(B.EXTERNAL_ID, '-',-2))) AS PROJECTNUM
FROM PROD_DATAWAREHOUSE_DB.KEYPAY.TIMESHEETS T
JOIN PROD_DATAWAREHOUSE_DB.KEYPAY.BUSINESS_LOCATIONS B
ON T.LOCATION_ID = B.LOCATION_ID
)
GROUP BY PROJECTNUM
),
S AS
(
SELECT  PROJECTID, SUM(MAN_HOURS) AS SUBBIES_HRS
FROM PROD_DATAWAREHOUSE_DB.PROCORE.DAILY_LOG_MANPOWER
GROUP BY PROJECTID
),
W AS
(SELECT PROJECTID, COUNT (CHECKLIST_TEMPLATE_NAME) AS WALKABOUTS
FROM PROD_DATAWAREHOUSE_DB.PROCORE.CHECKLIST
WHERE CHECKLIST_TEMPLATE_NAME = '08.01 Management Walkabout'
GROUP BY PROJECTID),
T AS (
SELECT PROJECTID, COUNT (ID) AS ITPs FROM PROD_DATAWAREHOUSE_DB.PROCORE.CHECKLIST
WHERE NAME LIKE '%ITP%'
GROUP BY  PROJECTID
),
R AS (SELECT PROJECTID, COUNT (ID) AS RISK_REGISTER
FROM PROD_DATAWAREHOUSE_DB.PROCORE.CHECKLIST
WHERE INSPECTION_TYPE_NAME LIKE '%Risk Register%'
GROUP BY  PROJECTID),
K AS
(SELECT PROJECTID, COUNT (ID) AS TASK_OBSERVATIONS FROM PROD_DATAWAREHOUSE_DB.PROCORE.CHECKLIST
WHERE NAME LIKE '%Task Observation%'
GROUP BY PROJECTID),
H AS
(SELECT PROJECTID, COUNT (ID) AS HIGH_RISK_AUDITS FROM PROD_DATAWAREHOUSE_DB.PROCORE.CHECKLIST
WHERE NAME LIKE '%High Risk%'
OR NAME like '%HRA%'
OR NAME LIKE '%high risk audit'
GROUP BY PROJECTID)
SELECT P.JOB_ID,P.JOB_NAME,P.DATE,P.REGION, M.MCNAB_HRS, S.SUBBIES_HRS,O.OBSERVATIONS,I.INCIDENTS,TRIFR, WALKABOUTS, ITPs,RISK_REGISTER,TASK_OBSERVATIONS,HIGH_RISK_AUDITS --P.PROJECT_NUMBER
FROM P 
LEFT JOIN O ON P.JOB_ID = O.PROJECTID
LEFT JOIN I ON P.JOB_ID = I.PROJECTID
LEFT JOIN J ON P.JOB_ID = J.PROJECTID
LEFT JOIN M ON P.PROJECT_NUMBER = M.PROJECTNUM
LEFT JOIN S ON P.JOB_ID = S.PROJECTID
LEFT JOIN W ON P.JOB_ID = W.PROJECTID
LEFT JOIN T ON P.JOB_ID = T.PROJECTID
LEFT JOIN R ON P.JOB_ID = R.PROJECTID
LEFT JOIN K ON P.JOB_ID = K.PROJECTID
LEFT JOIN H ON P.JOB_ID = H.PROJECTID
WHERE P.JOB_ID IS NOT NULL
ORDER BY P.JOB_ID
);


create or replace view PROD_DATAWAREHOUSE_DB.REPORTING.VW_REPORT_DISPLAY_REFRESHED_DATE(
	TABLE_SCHEMA,
	TABLE_NAME,
	LAST_REFRESHED_DATE
) as (select TABLE_SCHEMA, table_name, max(LAST_ALTERED) from "PROD_DATAWAREHOUSE_DB"."INFORMATION_SCHEMA"."TABLES" group by TABLE_SCHEMA, table_name);
